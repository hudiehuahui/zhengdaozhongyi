<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Account">
	<resultMap id="result" type="Account">
		<result property="id" column="id" />
		<result property="shortId" column="shortId" />
		<result property="sex" column="sex" />
		<result property="phoneNumber" column="phoneNumber" />
		<result property="nation" column="nation" />
		<result property="accountState" column="accountState" />
		<result property="headImg" column="headImg" />
		<result property="source" column="source" />
		<result property="nickname" column="nickname" />
		<result property="email" column="email" />
		<result property="lastLogTime" column="lastLogTime" />
		<result property="identyCode" column="identyCode" />
		<result property="accountType" column="accountType" />
		<result property="userName" column="userName" />
		<result property="password" column="password" />
		<result property="registTime" column="registTime" />
		<result property="syncStatus" column="syncStatus" />
	</resultMap>
	<!-- 基本字段 -->
	<sql id="Base_Column_List">
		id,accountState,nation,sex,phoneNumber,headImg,source,nickname,email,lastLogTime,identyCode,accountType,userName,password,registTime,syncStatus,shortId
	</sql>

	<insert id="insertAccount" keyProperty="id" parameterType="com.zdzy.timephd.member.model.Account">
		insert into m_account
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="shortId != null">
				shortId,
			</if>
			<if test="nation != null">
				nation,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="phoneNumber != null">
				phoneNumber,
			</if>
			<if test="syncStatus != null">
				syncStatus,
			</if>
			<if test="accountState != null">
				accountState,
			</if>
			<if test="headImg != null">
				headImg,
			</if>
			<if test="source != null">
				source,
			</if>
			<if test="nickname != null">
				nickname,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="lastLogTime != null">
				lastLogTime,
			</if>
			<if test="identyCode != null">
				identyCode,
			</if>
			<if test="accountType != null">
				accountType,
			</if>
			<if test="userName != null">
				userName,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="registTime != null">
				registTime
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id},
			</if>
			<if test="shortId != null">
				#{shortId},
			</if>
			<if test="nation != null">
				#{nation},
			</if>
			<if test="sex != null">
				#{sex},
			</if>
			<if test="phoneNumber != null">
				#{phoneNumber},
			</if>
			<if test="syncStatus != null">
				#{syncStatus},
			</if>
			<if test="accountState != null">
				#{accountState},
			</if>
			<if test="headImg != null">
				#{headImg},
			</if>
			<if test="source != null">
				#{source},
			</if>
			<if test="nickname != null">
				#{nickname},
			</if>
			<if test="email != null">
				#{email},
			</if>
			<if test="lastLogTime != null">
				#{lastLogTime},
			</if>
			<if test="identyCode != null">
				#{identyCode},
			</if>
			<if test="accountType != null">
				#{accountType},
			</if>
			<if test="userName != null">
				#{userName},
			</if>
			<if test="password != null">
				#{password},
			</if>
			<if test="registTime != null">
				#{registTime}
			</if>
		</trim>
	</insert>

	<update id="updateAccount" parameterType="com.zdzy.timephd.member.model.Account">
		update m_account
		<set>
			<if test="shortId != null">
				shortId = #{shortId},
			</if>
			<if test="nation != null">
				nation = #{nation},
			</if>
			<if test="sex != null">
				sex = #{sex},
			</if>
			<if test="phoneNumber != null">
				phoneNumber = #{phoneNumber},
			</if>
			<if test="accountState != null">
				accountState = #{accountState},
			</if>
			<if test="syncStatus != null">
				syncStatus = #{syncStatus},
			</if>
			<if test="headImg != null">
				headImg = #{headImg},
			</if>
			<if test="source != null">
				source = #{source},
			</if>
			<if test="nickname != null">
				nickname = #{nickname},
			</if>
			<if test="email != null">
				email = #{email},
			</if>
			<if test="lastLogTime != null">
				lastLogTime = #{lastLogTime},
			</if>
			<if test="identyCode != null">
				identyCode = #{identyCode},
			</if>
			<if test="accountType != null">
				accountType = #{accountType},
			</if>
			<if test="userName != null">
				userName = #{userName},
			</if>
			<if test="password != null">
				password = #{password},
			</if>
			<if test="registTime != null">
				registTime = #{registTime}
			</if>
		</set>
		where id=#{id}
	</update>
	
	<delete id="deleteAccount">
		delete from m_account where id=#{ID}
	</delete>
	<select id="selectAccount" resultMap="result">
		select
		<include refid="Base_Column_List" />
		from m_account where id=#{id}
	</select>
	<!-- 根据用户名查询用户 -->
	<select id="loginByName" resultMap="result">
		select
		<include refid="Base_Column_List" />
		from m_account where userName=#{value}
	</select>
	<!-- 根据Email查询用户 -->
	<select id="loginByEmail" resultMap="result">
		select
		<include refid="Base_Column_List" />
		from m_account where email=#{email}
	</select>

	<select id="queryAccount" resultType="java.util.List" resultMap="result">
		select
		<include refid="Base_Column_List" />
		from m_account
		<include refid="Query_Where_Clause" />
	</select>

	<select id="countAccount" resultType="int" parameterType="java.util.Map">
		select count(1) from m_account
		<include refid="Query_Where_Clause" />
	</select>

	<!-- 根据登录名查询 -->
	<select id="countByLoginName" resultType="int" parameterType="java.util.Map">
		select count(1) from m_account where userName = #{loginName}
	</select>

	<!-- 根据邮箱查询 -->
	<select id="countByEmail" resultType="int" parameterType="java.util.Map">
		select count(1) from m_account where email = #{email}
	</select>


	<!-- 依据map来查询对象 -->
	<select id="queryByMap" resultType="java.util.List" resultMap="result">
		select
		<include refid="Base_Column_List" />
		from m_account
		<include refid="Query_Where_Clause"></include>
	</select>



	<sql id="Query_Where_Clause">
		<where>
			<if test="true">
				1 = 1
			</if>
			<if test="userName != null ">
				and userName like '%${userName}%'
			</if>
			<if test="shortId != null ">
				and shortId = ${shortId}
			</if>
			<if test="nation != null ">
				and nation = '${nation}'
			</if>
			<if test="sex != null ">
				and sex = ${sex}
			</if>
			<if test="phoneNumber != null ">
				and phoneNumber = '${phoneNumber}'
			</if>
			<if test="accountType != null">
				and accountType=${accountType}
			</if>
			<if test="email != null">
				and email like '%${email}%'
			</if>
			<if test="syncStatus != null">
				and syncStatus='${syncStatus}'
			</if>
			<if test="accountState!=null">
				and accountState=${accountState}
			</if>
			<if test="beginDate != null">
				and registTime &gt;= '${beginDate}'
			</if>
			<if test="endDate != null">
				and registTime &lt;='${endDate}'
			</if>
			<if test="orderField != null and orderDirection != null and orderField != '' and orderDirection != ''">
				order by ${orderField} ${orderDirection}
			</if>
			<if test="orderField == null or orderField == ''">
				order by lastLogTime desc,registTime desc,accountState,accountType
			</if>
		</where>
	</sql>
</mapper>
